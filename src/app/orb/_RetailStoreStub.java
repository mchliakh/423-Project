package app.orb;


/**
* a2/orb/_RetailStoreStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from C:/Users/Misha/workspace/423/drs.idl
* Sunday, November 4, 2012 8:25:00 PM EST
*/

public class _RetailStoreStub extends org.omg.CORBA.portable.ObjectImpl implements app.orb.RetailStore
{

  public void purchaseItem (String customerID, int itemID, int numberOfItem) throws app.orb.RetailStorePackage.NoSuchItem, app.orb.RetailStorePackage.InsufficientQuantity
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("purchaseItem", true);
                $out.write_string (customerID);
                $out.write_long (itemID);
                $out.write_long (numberOfItem);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:a2/orb/RetailStore/NoSuchItem:1.0"))
                    throw app.orb.RetailStorePackage.NoSuchItemHelper.read ($in);
                else if (_id.equals ("IDL:a2/orb/RetailStore/InsufficientQuantity:1.0"))
                    throw app.orb.RetailStorePackage.InsufficientQuantityHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                purchaseItem (customerID, itemID, numberOfItem        );
            } finally {
                _releaseReply ($in);
            }
  } // purchaseItem

  public void returnItem (String customerID, int itemID, int numberOfItem) throws app.orb.RetailStorePackage.InvalidReturn
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("returnItem", true);
                $out.write_string (customerID);
                $out.write_long (itemID);
                $out.write_long (numberOfItem);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:a2/orb/RetailStore/InvalidReturn:1.0"))
                    throw app.orb.RetailStorePackage.InvalidReturnHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                returnItem (customerID, itemID, numberOfItem        );
            } finally {
                _releaseReply ($in);
            }
  } // returnItem

  public boolean transferItem (int itemID, int numberOfItem)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("transferItem", true);
                $out.write_long (itemID);
                $out.write_long (numberOfItem);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return transferItem (itemID, numberOfItem        );
            } finally {
                _releaseReply ($in);
            }
  } // transferItem

  public String checkStock (int itemID)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("checkStock", true);
                $out.write_long (itemID);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return checkStock (itemID        );
            } finally {
                _releaseReply ($in);
            }
  } // checkStock

  public void exchange (String customerID, int boughtItemID, int boughtNumber, int desiredItemID, int desiredNumber) throws app.orb.RetailStorePackage.InvalidReturn, app.orb.RetailStorePackage.NoSuchItem, app.orb.RetailStorePackage.InsufficientQuantity
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("exchange", true);
                $out.write_string (customerID);
                $out.write_long (boughtItemID);
                $out.write_long (boughtNumber);
                $out.write_long (desiredItemID);
                $out.write_long (desiredNumber);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:a2/orb/RetailStore/InvalidReturn:1.0"))
                    throw app.orb.RetailStorePackage.InvalidReturnHelper.read ($in);
                else if (_id.equals ("IDL:a2/orb/RetailStore/NoSuchItem:1.0"))
                    throw app.orb.RetailStorePackage.NoSuchItemHelper.read ($in);
                else if (_id.equals ("IDL:a2/orb/RetailStore/InsufficientQuantity:1.0"))
                    throw app.orb.RetailStorePackage.InsufficientQuantityHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                exchange (customerID, boughtItemID, boughtNumber, desiredItemID, desiredNumber        );
            } finally {
                _releaseReply ($in);
            }
  } // exchange

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:a2/orb/RetailStore:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.Object obj = org.omg.CORBA.ORB.init (args, props).string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     String str = org.omg.CORBA.ORB.init (args, props).object_to_string (this);
     s.writeUTF (str);
  }
} // class _RetailStoreStub
