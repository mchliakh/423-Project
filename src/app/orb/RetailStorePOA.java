package app.orb;


/**
* a2/orb/RetailStorePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from C:/Users/Misha/workspace/423/drs.idl
* Sunday, November 4, 2012 8:25:00 PM EST
*/

public abstract class RetailStorePOA extends org.omg.PortableServer.Servant
 implements app.orb.RetailStoreOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("purchaseItem", new java.lang.Integer (0));
    _methods.put ("returnItem", new java.lang.Integer (1));
    _methods.put ("transferItem", new java.lang.Integer (2));
    _methods.put ("checkStock", new java.lang.Integer (3));
    _methods.put ("exchange", new java.lang.Integer (4));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // a2/orb/RetailStore/purchaseItem
       {
         try {
           String customerID = in.read_string ();
           int itemID = in.read_long ();
           int numberOfItem = in.read_long ();
           this.purchaseItem (customerID, itemID, numberOfItem);
           out = $rh.createReply();
         } catch (app.orb.RetailStorePackage.NoSuchItem $ex) {
           out = $rh.createExceptionReply ();
           app.orb.RetailStorePackage.NoSuchItemHelper.write (out, $ex);
         } catch (app.orb.RetailStorePackage.InsufficientQuantity $ex) {
           out = $rh.createExceptionReply ();
           app.orb.RetailStorePackage.InsufficientQuantityHelper.write (out, $ex);
         }
         break;
       }

       case 1:  // a2/orb/RetailStore/returnItem
       {
         try {
           String customerID = in.read_string ();
           int itemID = in.read_long ();
           int numberOfItem = in.read_long ();
           this.returnItem (customerID, itemID, numberOfItem);
           out = $rh.createReply();
         } catch (app.orb.RetailStorePackage.InvalidReturn $ex) {
           out = $rh.createExceptionReply ();
           app.orb.RetailStorePackage.InvalidReturnHelper.write (out, $ex);
         }
         break;
       }

       case 2:  // a2/orb/RetailStore/transferItem
       {
         int itemID = in.read_long ();
         int numberOfItem = in.read_long ();
         boolean $result = false;
         $result = this.transferItem (itemID, numberOfItem);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 3:  // a2/orb/RetailStore/checkStock
       {
         int itemID = in.read_long ();
         String $result = null;
         $result = this.checkStock (itemID);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 4:  // a2/orb/RetailStore/exchange
       {
         try {
           String customerID = in.read_string ();
           int boughtItemID = in.read_long ();
           int boughtNumber = in.read_long ();
           int desiredItemID = in.read_long ();
           int desiredNumber = in.read_long ();
           this.exchange (customerID, boughtItemID, boughtNumber, desiredItemID, desiredNumber);
           out = $rh.createReply();
         } catch (app.orb.RetailStorePackage.InvalidReturn $ex) {
           out = $rh.createExceptionReply ();
           app.orb.RetailStorePackage.InvalidReturnHelper.write (out, $ex);
         } catch (app.orb.RetailStorePackage.NoSuchItem $ex) {
           out = $rh.createExceptionReply ();
           app.orb.RetailStorePackage.NoSuchItemHelper.write (out, $ex);
         } catch (app.orb.RetailStorePackage.InsufficientQuantity $ex) {
           out = $rh.createExceptionReply ();
           app.orb.RetailStorePackage.InsufficientQuantityHelper.write (out, $ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:a2/orb/RetailStore:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public RetailStore _this() 
  {
    return RetailStoreHelper.narrow(
    super._this_object());
  }

  public RetailStore _this(org.omg.CORBA.ORB orb) 
  {
    return RetailStoreHelper.narrow(
    super._this_object(orb));
  }


} // class RetailStorePOA
